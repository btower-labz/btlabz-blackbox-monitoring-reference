version: '3.7'

volumes:
    prometheus: {}
    alertmanager: {}
    grafana: {}
    envoy: {}
    dkron: {}
    es: {}
    pushgateway: {}

networks:
  public:
  private:
  database:

services:

  prometheus:
    image: prom/prometheus:v2.22.1
    volumes:
      - ./prometheus/config:/etc/prometheus/
      - prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.external-url=http://localhost/prometheus'
      - '--web.route-prefix=/prometheus'
      - '--web.max-connections=128'
      - '--web.listen-address=0.0.0.0:9090'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    expose:
      - 9090
    #ports:
    #  - 9090:9090
    networks:
      - public
    restart: always

  node-exporter:
    image: prom/node-exporter:v1.0.1
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    expose:
      - 9100
    #ports:
    #  - 9100:9100
    networks:
      - public
    restart: always
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager:v0.21.0
    expose:
      - 9093
    # ports:
    #   - 9093:9093
    volumes:
      - ./alertmanager/config:/etc/alertmanager/
      - alertmanager:/alertmanager/
    networks:
      - public
    restart: always
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost/alertmanager'
      - '--web.route-prefix=/alertmanager'

  grafana:
    image: grafana/grafana:7.3.1
    expose:
      - 3000
    # ports:
    #   - 3001:3000
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana/config:/etc/grafana/
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    env_file:
      - ./grafana/grafana.env
    networks:
      - public
    restart: always

  pushgateway:
    image: prom/pushgateway:v1.3.0
    restart: always
    volumes:
      - pushgateway:/pushgateway
    expose:
      - 9091
    # ports:
    #   - 9091:9091
    networks:
      - public
    command:
      - '--web.listen-address=0.0.0.0:9091'
      - '--web.external-url=http://localhost/pushgateway'
      - '--web.route-prefix=/pushgateway'
#      - '--persistence.file="/pushgateway/metrics.dat"'
#      - '--persistence.interval=5m'

  blackbox:
    image: prom/blackbox-exporter:v0.18.0
    volumes:
      - ./blackbox/config:/etc/blackbox/
      - ./blackbox/data:/blackbox
    restart: always
    command:
      - '--config.file=/etc/blackbox/blackbox.yml'
      - '--web.listen-address=0.0.0.0:9115'
      - '--web.external-url=http://localhost/blackbox'
      - '--web.route-prefix=/blackbox'
      - '--history.limit=500'
    expose:
      - 9115
    # ports:
    #   - "9115:9115"
    networks:
      - public

  envoy:
    image: envoyproxy/envoy:v1.16.0
    environment:
      ENVOY_UID: 0
      ENVOY_GID: 0
    volumes:
      - ./envoy/config:/etc/envoy/
      - envoy:/envoy
    command:
      - '--config-path /etc/envoy/envoy.yaml'
    expose:
      - 8080
      - 9901
    ports:
      - 8080:8080
      - 9901:9901
    networks:
      - public
    restart: always

  dkron-init:
    image: curlimages/curl:7.73.0
    deploy:
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 10
        window: 300s
    volumes:
      - ./dkron/jobs:/jobs/
      - ./dkron/scripts:/scripts/
    entrypoint: /bin/sh
    command:
      - /scripts/set-jobs.sh
    networks:
      - public
    depends_on:
      - dkron

  dkron:
    image: dkron/dkron:v3.0.6
    volumes:
      - ./dkron/config:/etc/dkron/
      - dkron:/dkron.data/
      - ./dkron/jobs:/etc/dkron/jobs/
      - ./dkron/scripts:/scripts/
    command:
      - agent
      - --server
      - --bootstrap-expect=1
      - --node-name=node1
    expose:
      - 8080
      - 8946
      - 6868
    ports:
      - 8081:8080 # for serf layer between agents
      # - 8946:8946 # for HTTP for the API and Dashboard
      # - 6868:6868 # for gRPC and raft layer comunication between agents.
    networks:
      - public
    restart: always

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.36.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    expose:
      - 8080
    # ports:
    #   - 8082:8080
    command:
      #- '-listen_ip'
      #- '0.0.0.0'
      #- '-port'
      #- '8080'
      - -url_base_prefix
      - '/cadvisor'
    networks:
      - public
    restart: always

  markweb:
    image: dannyben/madness:0.8.3
    # environment:
    #   MADNESS_FORCE_SSL: 0
    volumes:
      - ./markweb:/docs
    ports:
      - 8083:3030
    networks:
      - public


